name: ðŸš€ Deploy to Fly.io

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            flyctl deploy --remote-only --app blunof-telegram-miniapp
          else
            flyctl deploy --remote-only --app blunof-telegram-miniapp-staging
          fi

      - name: Health check
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            flyctl status --app blunof-telegram-miniapp
          else
            flyctl status --app blunof-telegram-miniapp-staging
          fi

  staging-deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs: deploy
    
    steps:
      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy staging app
        run: |
          flyctl deploy --remote-only --app blunof-telegram-miniapp-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
