# 🌟 Configuration Nginx pour Blunof
# Optimisée pour les mini-apps Telegram

events {
    worker_connections 1024;
}

http {
    # 📱 Types MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 🚀 Optimisations de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # 🔒 Sécurité
    server_tokens off;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 📊 Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 🎯 Serveur principal
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # 📱 Support des mini-apps Telegram
        add_header Service-Worker-Allowed "/" always;
        
        # 🔄 Redirection SPA
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # 📄 Service Worker
        location /sw.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Service-Worker-Allowed "/" always;
        }
        
        # 📋 Manifest PWA
        location /manifest.json {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Content-Type "application/manifest+json" always;
        }
        
        # 🎨 Assets statiques avec cache long
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
        
        # 📊 API (pour les futures fonctionnalités)
        location /api/ {
            # 🔒 CORS pour Telegram
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            # 🔄 Proxy vers l'API backend (à configurer)
            # proxy_pass http://backend:3001;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            
            # 📱 Fallback pour le moment
            return 404;
        }
        
        # 🔍 Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 📱 Robots.txt pour Telegram
        location /robots.txt {
            add_header Content-Type "text/plain" always;
            return 200 "User-agent: *\nDisallow: /\n";
        }
        
        # 🔒 Sécurité supplémentaire
        location ~ /\. {
            deny all;
        }
        
        # 📊 Logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
    
    # 🔒 Configuration HTTPS (optionnel)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     root /usr/share/nginx/html;
    #     index index.html;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Même configuration que le serveur HTTP
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #     }
    # }
}
